/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Documents {
  createdAt: Generated<Timestamp>;
  documentTypeId: string;
  id: Generated<string>;
  name: string;
  path: string;
  userId: string;
}

export interface DocumentTypes {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  type: string;
}

export interface Permissions {
  action: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  model: string;
}

export interface RolePermissions {
  createdAt: Generated<Timestamp>;
  permission_id: string;
  role_id: string;
}

export interface Roles {
  code: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
}

export interface Users {
  active: Generated<boolean>;
  createdAt: Generated<Timestamp>;
  fullname: string;
  id: Generated<string>;
  password: string;
  role_id: string;
  username: string;
}

export interface DB {
  document_types: DocumentTypes;
  documents: Documents;
  permissions: Permissions;
  role_permissions: RolePermissions;
  roles: Roles;
  users: Users;
}
